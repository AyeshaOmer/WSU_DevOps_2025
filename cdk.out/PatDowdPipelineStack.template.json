{
 "Resources": {
  "PatPipelineArtifactsBucket71D00118": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "aws:kms"
       }
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "PatDowdPipelineStack/PatPipeline/Pipeline/ArtifactsBucket/Resource"
   }
  },
  "PatPipelineArtifactsBucketPolicyC467C5BB": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "PatPipelineArtifactsBucket71D00118"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "PatPipelineArtifactsBucket71D00118",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PatPipelineArtifactsBucket71D00118",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":role/cdk-hnb659fds-deploy-role-",
           {
            "Ref": "AWS::AccountId"
           },
           "-",
           {
            "Ref": "AWS::Region"
           }
          ]
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "PatPipelineArtifactsBucket71D00118",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PatPipelineArtifactsBucket71D00118",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PatDowdPipelineStack/PatPipeline/Pipeline/ArtifactsBucket/Policy/Resource"
   }
  },
  "PatPipelineRoleCA8797C0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codepipeline.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PatDowdPipelineStack/PatPipeline/Pipeline/Role/Resource"
   }
  },
  "PatPipelineRoleDefaultPolicyEA73E15D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PatPipelineArtifactsBucket71D00118",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PatPipelineArtifactsBucket71D00118",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PatPipelineCodeBuildActionRole4A159328",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "PatPipelineSourceprinpaWSUDEVOPS2025CodePipelineActionRole9F44821E",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":role/cdk-hnb659fds-deploy-role-",
           {
            "Ref": "AWS::AccountId"
           },
           "-",
           {
            "Ref": "AWS::Region"
           }
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PatPipelineRoleDefaultPolicyEA73E15D",
    "Roles": [
     {
      "Ref": "PatPipelineRoleCA8797C0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PatDowdPipelineStack/PatPipeline/Pipeline/Role/DefaultPolicy/Resource"
   }
  },
  "PatPipeline8F88A304": {
   "Type": "AWS::CodePipeline::Pipeline",
   "Properties": {
    "ArtifactStore": {
     "Location": {
      "Ref": "PatPipelineArtifactsBucket71D00118"
     },
     "Type": "S3"
    },
    "PipelineType": "V2",
    "RestartExecutionOnUpdate": true,
    "RoleArn": {
     "Fn::GetAtt": [
      "PatPipelineRoleCA8797C0",
      "Arn"
     ]
    },
    "Stages": [
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Source",
         "Owner": "AWS",
         "Provider": "CodeStarSourceConnection",
         "Version": "1"
        },
        "Configuration": {
         "ConnectionArn": "arn:aws:codeconnections:ap-southeast-2:457795063739:connection/0cad7139-90d3-481f-92cb-da19d1f50daf",
         "FullRepositoryId": "prinpa/WSU_DEVOPS_2025",
         "BranchName": "refactor",
         "DetectChanges": true
        },
        "Name": "prinpa_WSU_DEVOPS_2025",
        "OutputArtifacts": [
         {
          "Name": "prinpa_WSU_DEVOPS_2025_Source"
         }
        ],
        "RoleArn": {
         "Fn::GetAtt": [
          "PatPipelineSourceprinpaWSUDEVOPS2025CodePipelineActionRole9F44821E",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "Source"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Build",
         "Owner": "AWS",
         "Provider": "CodeBuild",
         "Version": "1"
        },
        "Configuration": {
         "ProjectName": {
          "Ref": "PatPipelineBuildSynthCdkBuildProject4BB735E3"
         },
         "EnvironmentVariables": "[{\"name\":\"_PROJECT_CONFIG_HASH\",\"type\":\"PLAINTEXT\",\"value\":\"e540b28c9ebb028113e280dcac4c438edd065964d532a92ae6cfa62773f6bcbd\"}]"
        },
        "InputArtifacts": [
         {
          "Name": "prinpa_WSU_DEVOPS_2025_Source"
         }
        ],
        "Name": "Synth",
        "OutputArtifacts": [
         {
          "Name": "Synth_Output"
         }
        ],
        "RoleArn": {
         "Fn::GetAtt": [
          "PatPipelineCodeBuildActionRole4A159328",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "Build"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Build",
         "Owner": "AWS",
         "Provider": "CodeBuild",
         "Version": "1"
        },
        "Configuration": {
         "ProjectName": {
          "Ref": "PatPipelineUpdatePipelineSelfMutation4BD12320"
         },
         "EnvironmentVariables": "[{\"name\":\"_PROJECT_CONFIG_HASH\",\"type\":\"PLAINTEXT\",\"value\":\"9c2fc6b983b5f82201edbba03469391b261e33d70bc3d3efb457170afbd9c770\"}]"
        },
        "InputArtifacts": [
         {
          "Name": "Synth_Output"
         }
        ],
        "Name": "SelfMutate",
        "RoleArn": {
         "Fn::GetAtt": [
          "PatPipelineCodeBuildActionRole4A159328",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "UpdatePipeline"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Build",
         "Owner": "AWS",
         "Provider": "CodeBuild",
         "Version": "1"
        },
        "Configuration": {
         "ProjectName": {
          "Ref": "PatPipelineAssetsFileAsset1C8A4F688"
         }
        },
        "InputArtifacts": [
         {
          "Name": "Synth_Output"
         }
        ],
        "Name": "WebHelperFunction_Code",
        "RoleArn": {
         "Fn::GetAtt": [
          "PatPipelineCodeBuildActionRole4A159328",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "Assets"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Build",
         "Owner": "AWS",
         "Provider": "CodeBuild",
         "Version": "1"
        },
        "Configuration": {
         "ProjectName": {
          "Ref": "PatPipelineAlphaunitTestF2DED6A4"
         }
        },
        "InputArtifacts": [
         {
          "Name": "prinpa_WSU_DEVOPS_2025_Source"
         }
        ],
        "Name": "unitTest",
        "RoleArn": {
         "Fn::GetAtt": [
          "PatPipelineCodeBuildActionRole4A159328",
          "Arn"
         ]
        },
        "RunOrder": 1
       },
       {
        "ActionTypeId": {
         "Category": "Deploy",
         "Owner": "AWS",
         "Provider": "CloudFormation",
         "Version": "1"
        },
        "Configuration": {
         "StackName": "Alpha-PatDowdApplcationStack",
         "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
         "RoleArn": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":iam::",
            {
             "Ref": "AWS::AccountId"
            },
            ":role/cdk-hnb659fds-cfn-exec-role-",
            {
             "Ref": "AWS::AccountId"
            },
            "-",
            {
             "Ref": "AWS::Region"
            }
           ]
          ]
         },
         "ActionMode": "CHANGE_SET_REPLACE",
         "ChangeSetName": "PipelineChange",
         "TemplatePath": "Synth_Output::assembly-PatDowdPipelineStack-Alpha/PatDowdPipelineStackAlphaPatDowdApplcationStack0CD9CE26.template.json"
        },
        "InputArtifacts": [
         {
          "Name": "Synth_Output"
         }
        ],
        "Name": "PatDowdApplcationStack.Prepare",
        "RoleArn": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":role/cdk-hnb659fds-deploy-role-",
           {
            "Ref": "AWS::AccountId"
           },
           "-",
           {
            "Ref": "AWS::Region"
           }
          ]
         ]
        },
        "RunOrder": 2
       },
       {
        "ActionTypeId": {
         "Category": "Deploy",
         "Owner": "AWS",
         "Provider": "CloudFormation",
         "Version": "1"
        },
        "Configuration": {
         "StackName": "Alpha-PatDowdApplcationStack",
         "ActionMode": "CHANGE_SET_EXECUTE",
         "ChangeSetName": "PipelineChange"
        },
        "Name": "PatDowdApplcationStack.Deploy",
        "RoleArn": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":role/cdk-hnb659fds-deploy-role-",
           {
            "Ref": "AWS::AccountId"
           },
           "-",
           {
            "Ref": "AWS::Region"
           }
          ]
         ]
        },
        "RunOrder": 3
       }
      ],
      "Name": "Alpha"
     }
    ]
   },
   "DependsOn": [
    "PatPipelineRoleDefaultPolicyEA73E15D",
    "PatPipelineRoleCA8797C0"
   ],
   "Metadata": {
    "aws:cdk:path": "PatDowdPipelineStack/PatPipeline/Pipeline/Resource"
   }
  },
  "PatPipelineSourceprinpaWSUDEVOPS2025CodePipelineActionRole9F44821E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "PatPipelineRoleCA8797C0",
          "Arn"
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PatDowdPipelineStack/PatPipeline/Pipeline/Source/prinpa_WSU_DEVOPS_2025/CodePipelineActionRole/Resource"
   }
  },
  "PatPipelineSourceprinpaWSUDEVOPS2025CodePipelineActionRoleDefaultPolicy1734E9E3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "codestar-connections:UseConnection",
       "Effect": "Allow",
       "Resource": "arn:aws:codeconnections:ap-southeast-2:457795063739:connection/0cad7139-90d3-481f-92cb-da19d1f50daf"
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PatPipelineArtifactsBucket71D00118",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PatPipelineArtifactsBucket71D00118",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:PutObjectAcl",
        "s3:PutObjectVersionAcl"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "PatPipelineArtifactsBucket71D00118",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PatPipelineSourceprinpaWSUDEVOPS2025CodePipelineActionRoleDefaultPolicy1734E9E3",
    "Roles": [
     {
      "Ref": "PatPipelineSourceprinpaWSUDEVOPS2025CodePipelineActionRole9F44821E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PatDowdPipelineStack/PatPipeline/Pipeline/Source/prinpa_WSU_DEVOPS_2025/CodePipelineActionRole/DefaultPolicy/Resource"
   }
  },
  "PatPipelineBuildSynthCdkBuildProjectRoleCDE181B2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PatDowdPipelineStack/PatPipeline/Pipeline/Build/Synth/CdkBuildProject/Role/Resource"
   }
  },
  "PatPipelineBuildSynthCdkBuildProjectRoleDefaultPolicy873F6C17": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "PatPipelineBuildSynthCdkBuildProject4BB735E3"
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "PatPipelineBuildSynthCdkBuildProject4BB735E3"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:BatchPutCodeCoverages",
        "codebuild:BatchPutTestCases",
        "codebuild:CreateReport",
        "codebuild:CreateReportGroup",
        "codebuild:UpdateReport"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":report-group/",
          {
           "Ref": "PatPipelineBuildSynthCdkBuildProject4BB735E3"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PatPipelineArtifactsBucket71D00118",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PatPipelineArtifactsBucket71D00118",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PatPipelineBuildSynthCdkBuildProjectRoleDefaultPolicy873F6C17",
    "Roles": [
     {
      "Ref": "PatPipelineBuildSynthCdkBuildProjectRoleCDE181B2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PatDowdPipelineStack/PatPipeline/Pipeline/Build/Synth/CdkBuildProject/Role/DefaultPolicy/Resource"
   }
  },
  "PatPipelineBuildSynthCdkBuildProject4BB735E3": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "CODEPIPELINE"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "Description": "Pipeline step PatDowdPipelineStack/Pipeline/Build/Synth",
    "EncryptionKey": "alias/aws/s3",
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "Image": "aws/codebuild/standard:7.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": false,
     "Type": "LINUX_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "PatPipelineBuildSynthCdkBuildProjectRoleCDE181B2",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"build\": {\n      \"commands\": [\n        \"npm install -g aws-cdk\",\n        \"python -m pip install -r requirements.txt\",\n        \"cdk synth\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"base-directory\": \"cdk.out\",\n    \"files\": \"**/*\"\n  }\n}",
     "Type": "CODEPIPELINE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PatDowdPipelineStack/PatPipeline/Pipeline/Build/Synth/CdkBuildProject/Resource"
   }
  },
  "PatPipelineAlphaunitTestRole50BAE4F9": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PatDowdPipelineStack/PatPipeline/Pipeline/Alpha/unitTest/unitTest/Role/Resource"
   }
  },
  "PatPipelineAlphaunitTestRoleDefaultPolicy11FA3B86": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "PatPipelineAlphaunitTestF2DED6A4"
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "PatPipelineAlphaunitTestF2DED6A4"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:BatchPutCodeCoverages",
        "codebuild:BatchPutTestCases",
        "codebuild:CreateReport",
        "codebuild:CreateReportGroup",
        "codebuild:UpdateReport"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":report-group/",
          {
           "Ref": "PatPipelineAlphaunitTestF2DED6A4"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PatPipelineArtifactsBucket71D00118",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PatPipelineArtifactsBucket71D00118",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PatPipelineAlphaunitTestRoleDefaultPolicy11FA3B86",
    "Roles": [
     {
      "Ref": "PatPipelineAlphaunitTestRole50BAE4F9"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PatDowdPipelineStack/PatPipeline/Pipeline/Alpha/unitTest/unitTest/Role/DefaultPolicy/Resource"
   }
  },
  "PatPipelineAlphaunitTestF2DED6A4": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "CODEPIPELINE"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "Description": "Pipeline step PatDowdPipelineStack/Pipeline/Alpha/unitTest",
    "EncryptionKey": "alias/aws/s3",
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "Image": "aws/codebuild/standard:7.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": false,
     "Type": "LINUX_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "PatPipelineAlphaunitTestRole50BAE4F9",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"build\": {\n      \"commands\": [\n        \"python -m pip install aws-cdk-lib\",\n        \"python -m pip install -r requirements-dev.txt\",\n        \"pytest tests/unit/test_pat_dowd_stack.py -v\"\n      ]\n    }\n  }\n}",
     "Type": "CODEPIPELINE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PatDowdPipelineStack/PatPipeline/Pipeline/Alpha/unitTest/unitTest/Resource"
   }
  },
  "PatPipelineCodeBuildActionRole4A159328": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "PatPipelineRoleCA8797C0",
          "Arn"
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PatDowdPipelineStack/PatPipeline/CodeBuildActionRole/Resource"
   }
  },
  "PatPipelineCodeBuildActionRoleDefaultPolicyC82FF104": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "codebuild:BatchGetBuilds",
        "codebuild:StartBuild",
        "codebuild:StopBuild"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PatPipelineAlphaunitTestF2DED6A4",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "PatPipelineAssetsFileAsset1C8A4F688",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "PatPipelineBuildSynthCdkBuildProject4BB735E3",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "PatPipelineUpdatePipelineSelfMutation4BD12320",
          "Arn"
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PatPipelineCodeBuildActionRoleDefaultPolicyC82FF104",
    "Roles": [
     {
      "Ref": "PatPipelineCodeBuildActionRole4A159328"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PatDowdPipelineStack/PatPipeline/CodeBuildActionRole/DefaultPolicy/Resource"
   }
  },
  "PatPipelineUpdatePipelineSelfMutationRoleC30F891E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PatDowdPipelineStack/PatPipeline/UpdatePipeline/SelfMutation/Role/Resource"
   }
  },
  "PatPipelineUpdatePipelineSelfMutationRoleDefaultPolicy2111A5A6": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "PatPipelineUpdatePipelineSelfMutation4BD12320"
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "PatPipelineUpdatePipelineSelfMutation4BD12320"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:BatchPutCodeCoverages",
        "codebuild:BatchPutTestCases",
        "codebuild:CreateReport",
        "codebuild:CreateReportGroup",
        "codebuild:UpdateReport"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":report-group/",
          {
           "Ref": "PatPipelineUpdatePipelineSelfMutation4BD12320"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": "sts:AssumeRole",
       "Condition": {
        "ForAnyValue:StringEquals": {
         "iam:ResourceTag/aws-cdk:bootstrap-role": [
          "image-publishing",
          "file-publishing",
          "deploy"
         ]
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:*:iam::",
          {
           "Ref": "AWS::AccountId"
          },
          ":role/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "cloudformation:DescribeStacks",
        "s3:ListBucket"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PatPipelineArtifactsBucket71D00118",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PatPipelineArtifactsBucket71D00118",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PatPipelineUpdatePipelineSelfMutationRoleDefaultPolicy2111A5A6",
    "Roles": [
     {
      "Ref": "PatPipelineUpdatePipelineSelfMutationRoleC30F891E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PatDowdPipelineStack/PatPipeline/UpdatePipeline/SelfMutation/Role/DefaultPolicy/Resource"
   }
  },
  "PatPipelineUpdatePipelineSelfMutation4BD12320": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "CODEPIPELINE"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "Description": "Pipeline step PatDowdPipelineStack/Pipeline/UpdatePipeline/SelfMutate",
    "EncryptionKey": "alias/aws/s3",
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "Image": "aws/codebuild/standard:7.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": false,
     "Type": "LINUX_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "PatPipelineUpdatePipelineSelfMutationRoleC30F891E",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"commands\": [\n        \"npm install -g aws-cdk@2\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"cdk -a . deploy PatDowdPipelineStack --require-approval=never --verbose\"\n      ]\n    }\n  }\n}",
     "Type": "CODEPIPELINE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PatDowdPipelineStack/PatPipeline/UpdatePipeline/SelfMutation/Resource"
   }
  },
  "PatPipelineAssetsFileRoleBA37B016": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PatDowdPipelineStack/PatPipeline/Assets/FileRole/Resource"
   }
  },
  "PatPipelineAssetsFileRoleDefaultPolicyB9888D1D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":logs:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":log-group:/aws/codebuild/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "codebuild:BatchPutCodeCoverages",
        "codebuild:BatchPutTestCases",
        "codebuild:CreateReport",
        "codebuild:CreateReportGroup",
        "codebuild:UpdateReport"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":report-group/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "codebuild:BatchGetBuilds",
        "codebuild:StartBuild",
        "codebuild:StopBuild"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::Sub": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-${AWS::AccountId}-${AWS::Region}"
       }
      },
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PatPipelineArtifactsBucket71D00118",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PatPipelineArtifactsBucket71D00118",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PatPipelineAssetsFileRoleDefaultPolicyB9888D1D",
    "Roles": [
     {
      "Ref": "PatPipelineAssetsFileRoleBA37B016"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PatDowdPipelineStack/PatPipeline/Assets/FileRole/DefaultPolicy/Resource"
   }
  },
  "PatPipelineAssetsFileAsset1C8A4F688": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "CODEPIPELINE"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "Description": "Pipeline step PatDowdPipelineStack/Pipeline/Assets/WebHelperFunction_Code",
    "EncryptionKey": "alias/aws/s3",
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "Image": "aws/codebuild/standard:7.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": false,
     "Type": "LINUX_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "PatPipelineAssetsFileRoleBA37B016",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"commands\": [\n        \"npm install -g cdk-assets@latest\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"cdk-assets --path \\\"assembly-PatDowdPipelineStack-Alpha/PatDowdPipelineStackAlphaPatDowdApplcationStack0CD9CE26.assets.json\\\" --verbose publish \\\"bd7c945da3b8e78d04fe6677d26d03472fcd091dbb629f12ee8be7c2477d4144:current_account-current_region-1312a5cd\\\"\"\n      ]\n    }\n  }\n}",
     "Type": "CODEPIPELINE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PatDowdPipelineStack/PatPipeline/Assets/FileAsset1/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/+1YUW/aMBD+LfVjZbJBn5a3lHXTxNpFge0FocpxDuri2JHtrIus/PfJcULopqFtBUGrSqAk953Pd993seyMgtFwGLw9Iw96QLP1gLM0sFND6BoXrADOBOhgLDOI2ydMHvStpTKDDg9sh80t6ow3JAcUonOEN6ZZVTjTtxHCiCqpdUSpLIWZQKVRuCRcQwsksGJSJFBwRolhUlyWdA1GtwEVlBrGveO0LAqpTJN176MNUebqB9DSRfgivhYZMYBCo0rASEne5QeCpBwmUCXSNLO1dqIMWxJq/OStsdQbJhLJ4YNUEXVjugpqbBHJsqkhK0Dh3CLt7jZs1IuTcFjg8VJ0ddRYXwTWVzm3KG1utvQDQVVVuCInUP1mQyGaXE9vr6Ob6OPV+wZaSkVhOv3ccZ1ySddxmXJGI0pB9xrl8jvhseSMusAKDGEC+ex8PthfvMsmubaM3s3jNWYkD6zTZW4R0brMIbusUGhRoZigrCC87blO4sbHDfAq+sC+O3q+PJ0zGXdBuozntiXbGELvPgnH5gZD5+gvwN1xnyP637S70StFhIk28BZTDeKf8WP2/i29o0j1qJ/wEzl6LfAYL1tfUbsknHCrHjy15z/By2/Yg6F7pe4AOuyTiCdKt3dN9hfwdPtrB9ps+ZzyuN0RuobolJjJX5aKP5mbrbGBHIQ7UmxNe8rmI1X6Ou3x2um0snl5uftTcHt0dF800pLxrP+cESt5D9TMrV8ud/18KO9f1zgBLUtFodulHOq/qHFcmTsp3lwEw2Hw7uxeMzZQpTAshyDx159zXsUE4xEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "PatDowdPipelineStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}